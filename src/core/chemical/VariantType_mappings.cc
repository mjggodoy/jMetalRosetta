// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW CoMotion, email: license@uw.edu.

/// @file    core/chemical/VariantType_mappings.cc
/// @brief   Method definitions for private static methods declared in ResidueProperties.hh.
/// @author  Labonte <JWLabonte@jhu.edu>
/// @note    DO NOT EDIT THIS FILE DIRECTLY!  It is auto-generated.
/// If you wish to edit it, modify the update_ResidueType_enum_files.py script.
/// It is because it is auto-generated that these class methods are not defined in ResidueProperties.cc.

// Unit header
#include <core/chemical/ResidueProperties.hh>

// Utility header
#include <utility/vector1.hh>
#include <utility/excn/Exceptions.hh>

// C++ headers
#include <map>

namespace core {
namespace chemical {

using namespace core;

// Get the VariantType enum value from the corresponding sting.
// This private static class method is declared in ResidueProperties.hh.
// If adding a new variant, DO NOT MANUALLY EDIT THIS ENUMERATOR DEFINITION.
// Instead, add it to variant_types.list, and run the update_ResidueType_enum_files.py script.
VariantType const &
ResidueProperties::get_variant_from_string( std::string const & variant )
{
	using namespace std;
	using namespace utility::excn;

	// This line is only executed once.
	static map< string, VariantType > * VARIANT_MAP = NULL;

	// If statement ensures that the data is only created once, i.e., is constant.
	if ( ! VARIANT_MAP ) {
		// A map of VariantType enum values keyed by corresponding string.
		VARIANT_MAP = new map< string, VariantType >;

		VARIANT_MAP->insert( make_pair( "NO_VARIANT", NO_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "UPPER_TERMINUS_VARIANT", UPPER_TERMINUS_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "LOWER_TERMINUS_VARIANT", LOWER_TERMINUS_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "UPPERTERM_TRUNC_VARIANT", UPPERTERM_TRUNC_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "LOWERTERM_TRUNC_VARIANT", LOWERTERM_TRUNC_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "NTERM_CONNECT", NTERM_CONNECT ) );
		VARIANT_MAP->insert( make_pair( "CTERM_CONNECT", CTERM_CONNECT ) );
		VARIANT_MAP->insert( make_pair( "BRANCH_LOWER_TERMINUS_VARIANT", BRANCH_LOWER_TERMINUS_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "CUTPOINT_LOWER", CUTPOINT_LOWER ) );
		VARIANT_MAP->insert( make_pair( "CUTPOINT_UPPER", CUTPOINT_UPPER ) );
		VARIANT_MAP->insert( make_pair( "SC_BRANCH_POINT", SC_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C1_BRANCH_POINT", C1_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C2_BRANCH_POINT", C2_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C3_BRANCH_POINT", C3_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C4_BRANCH_POINT", C4_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C5_BRANCH_POINT", C5_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C6_BRANCH_POINT", C6_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C7_BRANCH_POINT", C7_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C8_BRANCH_POINT", C8_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "C9_BRANCH_POINT", C9_BRANCH_POINT ) );
		VARIANT_MAP->insert( make_pair( "SIDECHAIN_CONJUGATION", SIDECHAIN_CONJUGATION ) );
		VARIANT_MAP->insert( make_pair( "PROTONATED", PROTONATED ) );
		VARIANT_MAP->insert( make_pair( "DEPROTONATED", DEPROTONATED ) );
		VARIANT_MAP->insert( make_pair( "ALTERNATIVE_PROTONATION", ALTERNATIVE_PROTONATION ) );
		VARIANT_MAP->insert( make_pair( "SG_CONNECT", SG_CONNECT ) );
		VARIANT_MAP->insert( make_pair( "NE2_CONNECT", NE2_CONNECT ) );
		VARIANT_MAP->insert( make_pair( "ZN_CONNECT", ZN_CONNECT ) );
		VARIANT_MAP->insert( make_pair( "METHYLATION", METHYLATION ) );
		VARIANT_MAP->insert( make_pair( "METHYLATED_NTERM_VARIANT", METHYLATED_NTERM_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "PHOSPHORYLATION", PHOSPHORYLATION ) );
		VARIANT_MAP->insert( make_pair( "ACETYLATION", ACETYLATION ) );
		VARIANT_MAP->insert( make_pair( "SULFATION", SULFATION ) );
		VARIANT_MAP->insert( make_pair( "CARBOXYLATION", CARBOXYLATION ) );
		VARIANT_MAP->insert( make_pair( "HYDROXYLATION", HYDROXYLATION ) );
		VARIANT_MAP->insert( make_pair( "DIMETHYLATION", DIMETHYLATION ) );
		VARIANT_MAP->insert( make_pair( "TRIMETHYLATION", TRIMETHYLATION ) );
		VARIANT_MAP->insert( make_pair( "DIIODINATION", DIIODINATION ) );
		VARIANT_MAP->insert( make_pair( "N_METHYLATION", N_METHYLATION ) );
		VARIANT_MAP->insert( make_pair( "ACETYLATED_NTERMINUS_VARIANT", ACETYLATED_NTERMINUS_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "METHYLATED_CTERMINUS_VARIANT", METHYLATED_CTERMINUS_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "PHOSPHONATE_UPPER_VARIANT", PHOSPHONATE_UPPER_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_DNA_PHOSPHATE", VIRTUAL_DNA_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_PHOSPHATE", VIRTUAL_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "REPL_PHOSPHATE", REPL_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_RIBOSE", VIRTUAL_RIBOSE ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_BB", VIRTUAL_BB ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_BACKBONE_EXCEPT_C1PRIME", VIRTUAL_BACKBONE_EXCEPT_C1PRIME ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_BASE", VIRTUAL_BASE ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_BASE_HEAVY_ATOM", VIRTUAL_BASE_HEAVY_ATOM ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_RNA_RESIDUE", VIRTUAL_RNA_RESIDUE ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_RNA_RESIDUE_EXCLUDE_PHOSPHATE", VIRTUAL_RNA_RESIDUE_EXCLUDE_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "BULGE", BULGE ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_O2PRIME_HYDROGEN", VIRTUAL_O2PRIME_HYDROGEN ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_SIDE_CHAIN", VIRTUAL_SIDE_CHAIN ) );
		VARIANT_MAP->insert( make_pair( "THREE_PRIME_END_OH", THREE_PRIME_END_OH ) );
		VARIANT_MAP->insert( make_pair( "THREE_PRIME_PHOSPHATE", THREE_PRIME_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "FIVE_PRIME_END_OH", FIVE_PRIME_END_OH ) );
		VARIANT_MAP->insert( make_pair( "FIVE_PRIME_END_PHOSPHATE", FIVE_PRIME_END_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "FIVE_PRIME_PHOSPHATE", FIVE_PRIME_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "DEOXY_O2PRIME", DEOXY_O2PRIME ) );
		VARIANT_MAP->insert( make_pair( "UPPER_CONNECTION_RNA", UPPER_CONNECTION_RNA ) );
		VARIANT_MAP->insert( make_pair( "THREE_PRIME_PACKABLE_PHOSPHATE", THREE_PRIME_PACKABLE_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "FIVE_PRIME_PACKABLE_PHOSPHATE", FIVE_PRIME_PACKABLE_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "PROTONATED_N1_ADENOSINE", PROTONATED_N1_ADENOSINE ) );
		VARIANT_MAP->insert( make_pair( "PROTONATED_N3_ADENOSINE", PROTONATED_N3_ADENOSINE ) );
		VARIANT_MAP->insert( make_pair( "THREE_PRIME_FIVE_PRIME_METHYL_PHOSPHATE", THREE_PRIME_FIVE_PRIME_METHYL_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "BLOCK_STACK_ABOVE", BLOCK_STACK_ABOVE ) );
		VARIANT_MAP->insert( make_pair( "BLOCK_STACK_BELOW", BLOCK_STACK_BELOW ) );
		VARIANT_MAP->insert( make_pair( "N_ACETYLATION", N_ACETYLATION ) );
		VARIANT_MAP->insert( make_pair( "N_FORMYLATION", N_FORMYLATION ) );
		VARIANT_MAP->insert( make_pair( "C_METHYLAMIDATION", C_METHYLAMIDATION ) );
		VARIANT_MAP->insert( make_pair( "CTERM_AMIDATION", CTERM_AMIDATION ) );
		VARIANT_MAP->insert( make_pair( "ALDONIC_ACID_VARIANT", ALDONIC_ACID_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "C2_KETOALDONIC_ACID", C2_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "C3_KETOALDONIC_ACID", C3_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "C4_KETOALDONIC_ACID", C4_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "C5_KETOALDONIC_ACID", C5_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "C6_KETOALDONIC_ACID", C6_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "C7_KETOALDONIC_ACID", C7_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "C8_KETOALDONIC_ACID", C8_KETOALDONIC_ACID ) );
		VARIANT_MAP->insert( make_pair( "URONIC_ACID_VARIANT", URONIC_ACID_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "C1_DEOXY_SUGAR", C1_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_DEOXY_SUGAR", C2_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_DEOXY_SUGAR", C3_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_DEOXY_SUGAR", C4_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_DEOXY_SUGAR", C5_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_DEOXY_SUGAR", C6_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_DEOXY_SUGAR", C7_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_DEOXY_SUGAR", C8_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_DEOXY_SUGAR", C9_DEOXY_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_AMINO_SUGAR", C1_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_AMINO_SUGAR", C2_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_AMINO_SUGAR", C3_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_AMINO_SUGAR", C4_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_AMINO_SUGAR", C5_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_AMINO_SUGAR", C6_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_AMINO_SUGAR", C7_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_AMINO_SUGAR", C8_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_AMINO_SUGAR", C9_AMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_ACETYLAMINO_SUGAR", C1_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_ACETYLAMINO_SUGAR", C2_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_ACETYLAMINO_SUGAR", C3_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_ACETYLAMINO_SUGAR", C4_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_ACETYLAMINO_SUGAR", C5_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_ACETYLAMINO_SUGAR", C6_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_ACETYLAMINO_SUGAR", C7_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_ACETYLAMINO_SUGAR", C8_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_ACETYLAMINO_SUGAR", C9_ACETYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C1_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C2_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C3_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C4_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C5_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C6_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C7_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C8_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR", C9_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_SULFATED_SUGAR", C1_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_SULFATED_SUGAR", C2_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_SULFATED_SUGAR", C3_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_SULFATED_SUGAR", C4_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_SULFATED_SUGAR", C5_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_SULFATED_SUGAR", C6_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_SULFATED_SUGAR", C7_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_SULFATED_SUGAR", C8_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_SULFATED_SUGAR", C9_SULFATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_SULFOAMINO_SUGAR", C1_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_SULFOAMINO_SUGAR", C2_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_SULFOAMINO_SUGAR", C3_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_SULFOAMINO_SUGAR", C4_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_SULFOAMINO_SUGAR", C5_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_SULFOAMINO_SUGAR", C6_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_SULFOAMINO_SUGAR", C7_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_SULFOAMINO_SUGAR", C8_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_SULFOAMINO_SUGAR", C9_SULFOAMINO_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_METHYLATED_SUGAR", C1_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C2_METHYLATED_SUGAR", C2_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C3_METHYLATED_SUGAR", C3_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C4_METHYLATED_SUGAR", C4_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C5_METHYLATED_SUGAR", C5_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C6_METHYLATED_SUGAR", C6_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C7_METHYLATED_SUGAR", C7_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C8_METHYLATED_SUGAR", C8_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C9_METHYLATED_SUGAR", C9_METHYLATED_SUGAR ) );
		VARIANT_MAP->insert( make_pair( "C1_PHOSPHATE", C1_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C2_PHOSPHATE", C2_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C3_PHOSPHATE", C3_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C4_PHOSPHATE", C4_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C5_PHOSPHATE", C5_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C6_PHOSPHATE", C6_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C7_PHOSPHATE", C7_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C8_PHOSPHATE", C8_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "C9_PHOSPHATE", C9_PHOSPHATE ) );
		VARIANT_MAP->insert( make_pair( "METHYL_GLYCOSIDE", METHYL_GLYCOSIDE ) );
		VARIANT_MAP->insert( make_pair( "OOP_PRE", OOP_PRE ) );
		VARIANT_MAP->insert( make_pair( "OOP_POST", OOP_POST ) );
		VARIANT_MAP->insert( make_pair( "HBS_PRE", HBS_PRE ) );
		VARIANT_MAP->insert( make_pair( "HBS_POST", HBS_POST ) );
		VARIANT_MAP->insert( make_pair( "A3B_HBS_PRE", A3B_HBS_PRE ) );
		VARIANT_MAP->insert( make_pair( "A3B_HBS_POST", A3B_HBS_POST ) );
		VARIANT_MAP->insert( make_pair( "TRIAZOLAMERN", TRIAZOLAMERN ) );
		VARIANT_MAP->insert( make_pair( "TRIAZOLAMERC", TRIAZOLAMERC ) );
		VARIANT_MAP->insert( make_pair( "DISULFIDE", DISULFIDE ) );
		VARIANT_MAP->insert( make_pair( "ADDUCT_VARIANT", ADDUCT_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "CENTROID_WITH_HA", CENTROID_WITH_HA ) );
		VARIANT_MAP->insert( make_pair( "SPECIAL_ROT", SPECIAL_ROT ) );
		VARIANT_MAP->insert( make_pair( "HYDROXYLATION1", HYDROXYLATION1 ) );
		VARIANT_MAP->insert( make_pair( "HYDROXYLATION2", HYDROXYLATION2 ) );
		VARIANT_MAP->insert( make_pair( "REPLONLY", REPLONLY ) );
		VARIANT_MAP->insert( make_pair( "REPLS_BB", REPLS_BB ) );
		VARIANT_MAP->insert( make_pair( "SC_FRAGMENT", SC_FRAGMENT ) );
		VARIANT_MAP->insert( make_pair( "SHOVE_BB", SHOVE_BB ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_RESIDUE_VARIANT", VIRTUAL_RESIDUE_VARIANT ) );
		VARIANT_MAP->insert( make_pair( "VIRTUAL_NTERM", VIRTUAL_NTERM ) );
	}

	if ( ! ( *VARIANT_MAP ).count( variant ) ) {
		return ( *VARIANT_MAP )[ "NO_VARIANT" ];
	}

	return ( *VARIANT_MAP )[ variant ];
}

// Get a string from the corresponding VariantType enum value.
// This private static class method is declared in ResidueProperties.hh.
// If adding a new variant, DO NOT MANUALLY EDIT THIS ENUMERATOR DEFINITION.
// Instead, add it to variant_types.list, and run the update_ResidueType_enum_files.py script.
std::string const &
ResidueProperties::get_string_from_variant( VariantType const variant )
{
	using namespace std;
	using namespace utility;

	// This line is only executed once.
	static vector1< string > * STRING_LIST = NULL;

	// If statement ensures that the data is only created once, i.e., is constant.
	if ( ! STRING_LIST ) {
		// A vector mapping VariantType enum values to their corresponding strings.
		STRING_LIST = new vector1< string >;
		STRING_LIST->resize( N_VARIANTS, "" );

		( *STRING_LIST )[ UPPER_TERMINUS_VARIANT ] = "UPPER_TERMINUS_VARIANT";
		( *STRING_LIST )[ LOWER_TERMINUS_VARIANT ] = "LOWER_TERMINUS_VARIANT";
		( *STRING_LIST )[ UPPERTERM_TRUNC_VARIANT ] = "UPPERTERM_TRUNC_VARIANT";
		( *STRING_LIST )[ LOWERTERM_TRUNC_VARIANT ] = "LOWERTERM_TRUNC_VARIANT";
		( *STRING_LIST )[ NTERM_CONNECT ] = "NTERM_CONNECT";
		( *STRING_LIST )[ CTERM_CONNECT ] = "CTERM_CONNECT";
		( *STRING_LIST )[ BRANCH_LOWER_TERMINUS_VARIANT ] = "BRANCH_LOWER_TERMINUS_VARIANT";
		( *STRING_LIST )[ CUTPOINT_LOWER ] = "CUTPOINT_LOWER";
		( *STRING_LIST )[ CUTPOINT_UPPER ] = "CUTPOINT_UPPER";
		( *STRING_LIST )[ SC_BRANCH_POINT ] = "SC_BRANCH_POINT";
		( *STRING_LIST )[ C1_BRANCH_POINT ] = "C1_BRANCH_POINT";
		( *STRING_LIST )[ C2_BRANCH_POINT ] = "C2_BRANCH_POINT";
		( *STRING_LIST )[ C3_BRANCH_POINT ] = "C3_BRANCH_POINT";
		( *STRING_LIST )[ C4_BRANCH_POINT ] = "C4_BRANCH_POINT";
		( *STRING_LIST )[ C5_BRANCH_POINT ] = "C5_BRANCH_POINT";
		( *STRING_LIST )[ C6_BRANCH_POINT ] = "C6_BRANCH_POINT";
		( *STRING_LIST )[ C7_BRANCH_POINT ] = "C7_BRANCH_POINT";
		( *STRING_LIST )[ C8_BRANCH_POINT ] = "C8_BRANCH_POINT";
		( *STRING_LIST )[ C9_BRANCH_POINT ] = "C9_BRANCH_POINT";
		( *STRING_LIST )[ SIDECHAIN_CONJUGATION ] = "SIDECHAIN_CONJUGATION";
		( *STRING_LIST )[ PROTONATED ] = "PROTONATED";
		( *STRING_LIST )[ DEPROTONATED ] = "DEPROTONATED";
		( *STRING_LIST )[ ALTERNATIVE_PROTONATION ] = "ALTERNATIVE_PROTONATION";
		( *STRING_LIST )[ SG_CONNECT ] = "SG_CONNECT";
		( *STRING_LIST )[ NE2_CONNECT ] = "NE2_CONNECT";
		( *STRING_LIST )[ ZN_CONNECT ] = "ZN_CONNECT";
		( *STRING_LIST )[ METHYLATION ] = "METHYLATION";
		( *STRING_LIST )[ METHYLATED_NTERM_VARIANT ] = "METHYLATED_NTERM_VARIANT";
		( *STRING_LIST )[ PHOSPHORYLATION ] = "PHOSPHORYLATION";
		( *STRING_LIST )[ ACETYLATION ] = "ACETYLATION";
		( *STRING_LIST )[ SULFATION ] = "SULFATION";
		( *STRING_LIST )[ CARBOXYLATION ] = "CARBOXYLATION";
		( *STRING_LIST )[ HYDROXYLATION ] = "HYDROXYLATION";
		( *STRING_LIST )[ DIMETHYLATION ] = "DIMETHYLATION";
		( *STRING_LIST )[ TRIMETHYLATION ] = "TRIMETHYLATION";
		( *STRING_LIST )[ DIIODINATION ] = "DIIODINATION";
		( *STRING_LIST )[ N_METHYLATION ] = "N_METHYLATION";
		( *STRING_LIST )[ ACETYLATED_NTERMINUS_VARIANT ] = "ACETYLATED_NTERMINUS_VARIANT";
		( *STRING_LIST )[ METHYLATED_CTERMINUS_VARIANT ] = "METHYLATED_CTERMINUS_VARIANT";
		( *STRING_LIST )[ PHOSPHONATE_UPPER_VARIANT ] = "PHOSPHONATE_UPPER_VARIANT";
		( *STRING_LIST )[ VIRTUAL_DNA_PHOSPHATE ] = "VIRTUAL_DNA_PHOSPHATE";
		( *STRING_LIST )[ VIRTUAL_PHOSPHATE ] = "VIRTUAL_PHOSPHATE";
		( *STRING_LIST )[ REPL_PHOSPHATE ] = "REPL_PHOSPHATE";
		( *STRING_LIST )[ VIRTUAL_RIBOSE ] = "VIRTUAL_RIBOSE";
		( *STRING_LIST )[ VIRTUAL_BB ] = "VIRTUAL_BB";
		( *STRING_LIST )[ VIRTUAL_BACKBONE_EXCEPT_C1PRIME ] = "VIRTUAL_BACKBONE_EXCEPT_C1PRIME";
		( *STRING_LIST )[ VIRTUAL_BASE ] = "VIRTUAL_BASE";
		( *STRING_LIST )[ VIRTUAL_BASE_HEAVY_ATOM ] = "VIRTUAL_BASE_HEAVY_ATOM";
		( *STRING_LIST )[ VIRTUAL_RNA_RESIDUE ] = "VIRTUAL_RNA_RESIDUE";
		( *STRING_LIST )[ VIRTUAL_RNA_RESIDUE_EXCLUDE_PHOSPHATE ] = "VIRTUAL_RNA_RESIDUE_EXCLUDE_PHOSPHATE";
		( *STRING_LIST )[ BULGE ] = "BULGE";
		( *STRING_LIST )[ VIRTUAL_O2PRIME_HYDROGEN ] = "VIRTUAL_O2PRIME_HYDROGEN";
		( *STRING_LIST )[ VIRTUAL_SIDE_CHAIN ] = "VIRTUAL_SIDE_CHAIN";
		( *STRING_LIST )[ THREE_PRIME_END_OH ] = "THREE_PRIME_END_OH";
		( *STRING_LIST )[ THREE_PRIME_PHOSPHATE ] = "THREE_PRIME_PHOSPHATE";
		( *STRING_LIST )[ FIVE_PRIME_END_OH ] = "FIVE_PRIME_END_OH";
		( *STRING_LIST )[ FIVE_PRIME_END_PHOSPHATE ] = "FIVE_PRIME_END_PHOSPHATE";
		( *STRING_LIST )[ FIVE_PRIME_PHOSPHATE ] = "FIVE_PRIME_PHOSPHATE";
		( *STRING_LIST )[ DEOXY_O2PRIME ] = "DEOXY_O2PRIME";
		( *STRING_LIST )[ UPPER_CONNECTION_RNA ] = "UPPER_CONNECTION_RNA";
		( *STRING_LIST )[ THREE_PRIME_PACKABLE_PHOSPHATE ] = "THREE_PRIME_PACKABLE_PHOSPHATE";
		( *STRING_LIST )[ FIVE_PRIME_PACKABLE_PHOSPHATE ] = "FIVE_PRIME_PACKABLE_PHOSPHATE";
		( *STRING_LIST )[ PROTONATED_N1_ADENOSINE ] = "PROTONATED_N1_ADENOSINE";
		( *STRING_LIST )[ PROTONATED_N3_ADENOSINE ] = "PROTONATED_N3_ADENOSINE";
		( *STRING_LIST )[ THREE_PRIME_FIVE_PRIME_METHYL_PHOSPHATE ] = "THREE_PRIME_FIVE_PRIME_METHYL_PHOSPHATE";
		( *STRING_LIST )[ BLOCK_STACK_ABOVE ] = "BLOCK_STACK_ABOVE";
		( *STRING_LIST )[ BLOCK_STACK_BELOW ] = "BLOCK_STACK_BELOW";
		( *STRING_LIST )[ N_ACETYLATION ] = "N_ACETYLATION";
		( *STRING_LIST )[ N_FORMYLATION ] = "N_FORMYLATION";
		( *STRING_LIST )[ C_METHYLAMIDATION ] = "C_METHYLAMIDATION";
		( *STRING_LIST )[ CTERM_AMIDATION ] = "CTERM_AMIDATION";
		( *STRING_LIST )[ ALDONIC_ACID_VARIANT ] = "ALDONIC_ACID_VARIANT";
		( *STRING_LIST )[ C2_KETOALDONIC_ACID ] = "C2_KETOALDONIC_ACID";
		( *STRING_LIST )[ C3_KETOALDONIC_ACID ] = "C3_KETOALDONIC_ACID";
		( *STRING_LIST )[ C4_KETOALDONIC_ACID ] = "C4_KETOALDONIC_ACID";
		( *STRING_LIST )[ C5_KETOALDONIC_ACID ] = "C5_KETOALDONIC_ACID";
		( *STRING_LIST )[ C6_KETOALDONIC_ACID ] = "C6_KETOALDONIC_ACID";
		( *STRING_LIST )[ C7_KETOALDONIC_ACID ] = "C7_KETOALDONIC_ACID";
		( *STRING_LIST )[ C8_KETOALDONIC_ACID ] = "C8_KETOALDONIC_ACID";
		( *STRING_LIST )[ URONIC_ACID_VARIANT ] = "URONIC_ACID_VARIANT";
		( *STRING_LIST )[ C1_DEOXY_SUGAR ] = "C1_DEOXY_SUGAR";
		( *STRING_LIST )[ C2_DEOXY_SUGAR ] = "C2_DEOXY_SUGAR";
		( *STRING_LIST )[ C3_DEOXY_SUGAR ] = "C3_DEOXY_SUGAR";
		( *STRING_LIST )[ C4_DEOXY_SUGAR ] = "C4_DEOXY_SUGAR";
		( *STRING_LIST )[ C5_DEOXY_SUGAR ] = "C5_DEOXY_SUGAR";
		( *STRING_LIST )[ C6_DEOXY_SUGAR ] = "C6_DEOXY_SUGAR";
		( *STRING_LIST )[ C7_DEOXY_SUGAR ] = "C7_DEOXY_SUGAR";
		( *STRING_LIST )[ C8_DEOXY_SUGAR ] = "C8_DEOXY_SUGAR";
		( *STRING_LIST )[ C9_DEOXY_SUGAR ] = "C9_DEOXY_SUGAR";
		( *STRING_LIST )[ C1_AMINO_SUGAR ] = "C1_AMINO_SUGAR";
		( *STRING_LIST )[ C2_AMINO_SUGAR ] = "C2_AMINO_SUGAR";
		( *STRING_LIST )[ C3_AMINO_SUGAR ] = "C3_AMINO_SUGAR";
		( *STRING_LIST )[ C4_AMINO_SUGAR ] = "C4_AMINO_SUGAR";
		( *STRING_LIST )[ C5_AMINO_SUGAR ] = "C5_AMINO_SUGAR";
		( *STRING_LIST )[ C6_AMINO_SUGAR ] = "C6_AMINO_SUGAR";
		( *STRING_LIST )[ C7_AMINO_SUGAR ] = "C7_AMINO_SUGAR";
		( *STRING_LIST )[ C8_AMINO_SUGAR ] = "C8_AMINO_SUGAR";
		( *STRING_LIST )[ C9_AMINO_SUGAR ] = "C9_AMINO_SUGAR";
		( *STRING_LIST )[ C1_ACETYLAMINO_SUGAR ] = "C1_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C2_ACETYLAMINO_SUGAR ] = "C2_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C3_ACETYLAMINO_SUGAR ] = "C3_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C4_ACETYLAMINO_SUGAR ] = "C4_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C5_ACETYLAMINO_SUGAR ] = "C5_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C6_ACETYLAMINO_SUGAR ] = "C6_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C7_ACETYLAMINO_SUGAR ] = "C7_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C8_ACETYLAMINO_SUGAR ] = "C8_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C9_ACETYLAMINO_SUGAR ] = "C9_ACETYLAMINO_SUGAR";
		( *STRING_LIST )[ C1_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C1_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C2_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C2_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C3_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C3_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C4_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C4_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C5_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C5_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C6_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C6_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C7_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C7_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C8_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C8_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C9_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR ] = "C9_R3PRIMEHYDROXYBUTYRYLAMINO_SUGAR";
		( *STRING_LIST )[ C1_SULFATED_SUGAR ] = "C1_SULFATED_SUGAR";
		( *STRING_LIST )[ C2_SULFATED_SUGAR ] = "C2_SULFATED_SUGAR";
		( *STRING_LIST )[ C3_SULFATED_SUGAR ] = "C3_SULFATED_SUGAR";
		( *STRING_LIST )[ C4_SULFATED_SUGAR ] = "C4_SULFATED_SUGAR";
		( *STRING_LIST )[ C5_SULFATED_SUGAR ] = "C5_SULFATED_SUGAR";
		( *STRING_LIST )[ C6_SULFATED_SUGAR ] = "C6_SULFATED_SUGAR";
		( *STRING_LIST )[ C7_SULFATED_SUGAR ] = "C7_SULFATED_SUGAR";
		( *STRING_LIST )[ C8_SULFATED_SUGAR ] = "C8_SULFATED_SUGAR";
		( *STRING_LIST )[ C9_SULFATED_SUGAR ] = "C9_SULFATED_SUGAR";
		( *STRING_LIST )[ C1_SULFOAMINO_SUGAR ] = "C1_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C2_SULFOAMINO_SUGAR ] = "C2_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C3_SULFOAMINO_SUGAR ] = "C3_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C4_SULFOAMINO_SUGAR ] = "C4_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C5_SULFOAMINO_SUGAR ] = "C5_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C6_SULFOAMINO_SUGAR ] = "C6_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C7_SULFOAMINO_SUGAR ] = "C7_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C8_SULFOAMINO_SUGAR ] = "C8_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C9_SULFOAMINO_SUGAR ] = "C9_SULFOAMINO_SUGAR";
		( *STRING_LIST )[ C1_METHYLATED_SUGAR ] = "C1_METHYLATED_SUGAR";
		( *STRING_LIST )[ C2_METHYLATED_SUGAR ] = "C2_METHYLATED_SUGAR";
		( *STRING_LIST )[ C3_METHYLATED_SUGAR ] = "C3_METHYLATED_SUGAR";
		( *STRING_LIST )[ C4_METHYLATED_SUGAR ] = "C4_METHYLATED_SUGAR";
		( *STRING_LIST )[ C5_METHYLATED_SUGAR ] = "C5_METHYLATED_SUGAR";
		( *STRING_LIST )[ C6_METHYLATED_SUGAR ] = "C6_METHYLATED_SUGAR";
		( *STRING_LIST )[ C7_METHYLATED_SUGAR ] = "C7_METHYLATED_SUGAR";
		( *STRING_LIST )[ C8_METHYLATED_SUGAR ] = "C8_METHYLATED_SUGAR";
		( *STRING_LIST )[ C9_METHYLATED_SUGAR ] = "C9_METHYLATED_SUGAR";
		( *STRING_LIST )[ C1_PHOSPHATE ] = "C1_PHOSPHATE";
		( *STRING_LIST )[ C2_PHOSPHATE ] = "C2_PHOSPHATE";
		( *STRING_LIST )[ C3_PHOSPHATE ] = "C3_PHOSPHATE";
		( *STRING_LIST )[ C4_PHOSPHATE ] = "C4_PHOSPHATE";
		( *STRING_LIST )[ C5_PHOSPHATE ] = "C5_PHOSPHATE";
		( *STRING_LIST )[ C6_PHOSPHATE ] = "C6_PHOSPHATE";
		( *STRING_LIST )[ C7_PHOSPHATE ] = "C7_PHOSPHATE";
		( *STRING_LIST )[ C8_PHOSPHATE ] = "C8_PHOSPHATE";
		( *STRING_LIST )[ C9_PHOSPHATE ] = "C9_PHOSPHATE";
		( *STRING_LIST )[ METHYL_GLYCOSIDE ] = "METHYL_GLYCOSIDE";
		( *STRING_LIST )[ OOP_PRE ] = "OOP_PRE";
		( *STRING_LIST )[ OOP_POST ] = "OOP_POST";
		( *STRING_LIST )[ HBS_PRE ] = "HBS_PRE";
		( *STRING_LIST )[ HBS_POST ] = "HBS_POST";
		( *STRING_LIST )[ A3B_HBS_PRE ] = "A3B_HBS_PRE";
		( *STRING_LIST )[ A3B_HBS_POST ] = "A3B_HBS_POST";
		( *STRING_LIST )[ TRIAZOLAMERN ] = "TRIAZOLAMERN";
		( *STRING_LIST )[ TRIAZOLAMERC ] = "TRIAZOLAMERC";
		( *STRING_LIST )[ DISULFIDE ] = "DISULFIDE";
		( *STRING_LIST )[ ADDUCT_VARIANT ] = "ADDUCT_VARIANT";
		( *STRING_LIST )[ CENTROID_WITH_HA ] = "CENTROID_WITH_HA";
		( *STRING_LIST )[ SPECIAL_ROT ] = "SPECIAL_ROT";
		( *STRING_LIST )[ HYDROXYLATION1 ] = "HYDROXYLATION1";
		( *STRING_LIST )[ HYDROXYLATION2 ] = "HYDROXYLATION2";
		( *STRING_LIST )[ REPLONLY ] = "REPLONLY";
		( *STRING_LIST )[ REPLS_BB ] = "REPLS_BB";
		( *STRING_LIST )[ SC_FRAGMENT ] = "SC_FRAGMENT";
		( *STRING_LIST )[ SHOVE_BB ] = "SHOVE_BB";
		( *STRING_LIST )[ VIRTUAL_RESIDUE_VARIANT ] = "VIRTUAL_RESIDUE_VARIANT";
		( *STRING_LIST )[ VIRTUAL_NTERM ] = "VIRTUAL_NTERM";
	}

	return ( *STRING_LIST )[ variant ];
}

}  // namespace chemical
}  // namespace core
