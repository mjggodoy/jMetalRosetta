namespace out { namespace file { BooleanOptionKey const cif_extra_data_separate_file( "out:file:cif_extra_data_separate_file" );  } }
namespace out { namespace file { BooleanOptionKey const dont_rewrite_dunbrack_database( "out:file:dont_rewrite_dunbrack_database" );  } }
namespace out { namespace file { StringOptionKey const frag_prefix( "out:file:frag_prefix" );  } }
namespace out { namespace file { BooleanOptionKey const no_extra_sdf_data( "out:file:no_extra_sdf_data" );  } }
namespace out { namespace file { BooleanOptionKey const no_scores_in_pdb( "out:file:no_scores_in_pdb" );  } }
namespace out { namespace path { PathOptionKey const all( "out:path:all" );  } }
namespace out { namespace path { PathOptionKey const path( "out:path" );  } }
namespace out { namespace path { PathOptionKey const pdb( "out:path:pdb" );  } }
namespace out { namespace path { PathOptionKey const db( "out:path:db" );  } }
namespace out { namespace path { PathOptionKey const score( "out:path:score" );  } }
namespace out { namespace path { PathOptionKey const scratch( "out:path:scratch" );  } }
namespace out { namespace path { BooleanOptionKey const mpi_rank_dir( "out:path:mpi_rank_dir" );  } }
namespace out { namespace path { PathOptionKey const mmCIF( "out:path:mmCIF" );  } }
namespace run { BooleanOptionKey const run( "run" );  }
namespace run { FileVectorOptionKey const batches( "run:batches" );  }
namespace run { BooleanOptionKey const no_prof_info_in_silentout( "run:no_prof_info_in_silentout" );  }
namespace run { BooleanOptionKey const archive( "run:archive" );  }
namespace run { IntegerOptionKey const n_replica( "run:n_replica" );  }
namespace run { BooleanOptionKey const shuffle( "run:shuffle" );  }
namespace run { BooleanOptionKey const msd_job_dist( "run:msd_job_dist" );  }
namespace run { BooleanOptionKey const msd_randomize( "run:msd_randomize" );  }
namespace run { IntegerOptionKey const n_cycles( "run:n_cycles" );  }
namespace run { IntegerOptionKey const repeat( "run:repeat" );  }
namespace run { IntegerOptionKey const max_min_iter( "run:max_min_iter" );  }
namespace run { IntegerOptionKey const maxruntime( "run:maxruntime" );  }
namespace run { RealOptionKey const maxruntime_bufferfactor( "run:maxruntime_bufferfactor" );  }
namespace run { BooleanOptionKey const write_failures( "run:write_failures" );  }
namespace run { BooleanOptionKey const benchmark( "run:benchmark" );  }
namespace run { BooleanOptionKey const test_cycles( "run:test_cycles" );  }
namespace run { BooleanOptionKey const memory_test_cycles( "run:memory_test_cycles" );  }
namespace run { BooleanOptionKey const dry_run( "run:dry_run" );  }
namespace run { BooleanOptionKey const debug( "run:debug" );  }
namespace run { BooleanOptionKey const profile( "run:profile" );  }
namespace run { IntegerOptionKey const max_retry_job( "run:max_retry_job" );  }
namespace run { BooleanOptionKey const version( "run:version" );  }
namespace run { BooleanOptionKey const nodelay( "run:nodelay" );  }
namespace run { IntegerOptionKey const delay( "run:delay" );  }
namespace run { IntegerOptionKey const random_delay( "run:random_delay" );  }
namespace run { BooleanOptionKey const timer( "run:timer" );  }
namespace run { StringOptionKey const chain( "run:chain" );  }
namespace run { BooleanOptionKey const score_only( "run:score_only" );  }
namespace run { BooleanOptionKey const decoystats( "run:decoystats" );  }
namespace run { BooleanOptionKey const output_hbond_info( "run:output_hbond_info" );  }
namespace run { RealOptionKey const wide_nblist_extension( "run:wide_nblist_extension" );  }
namespace run { BooleanOptionKey const constant_seed( "run:constant_seed" );  }
namespace run { IntegerOptionKey const jran( "run:jran" );  }
namespace run { BooleanOptionKey const use_time_as_seed( "run:use_time_as_seed" );  }
namespace run { StringOptionKey const rng_seed_device( "run:rng_seed_device" );  }
namespace run { IntegerOptionKey const seed_offset( "run:seed_offset" );  }
namespace run { StringOptionKey const rng( "run:rng" );  }
namespace run { BooleanOptionKey const rebuild_disulf( "run:rebuild_disulf" );  }
namespace run { BooleanOptionKey const preserve_header( "run:preserve_header" );  }
namespace run { BooleanOptionKey const suppress_checkpoints( "run:suppress_checkpoints" );  }
namespace run { BooleanOptionKey const checkpoint( "run:checkpoint" );  }
namespace run { BooleanOptionKey const delete_checkpoints( "run:delete_checkpoints" );  }
namespace run { IntegerOptionKey const checkpoint_interval( "run:checkpoint_interval" );  }
namespace run { StringOptionKey const protocol( "run:protocol" );  }
namespace run { BooleanOptionKey const remove_ss_length_screen( "run:remove_ss_length_screen" );  }
namespace run { StringOptionKey const min_type( "run:min_type" );  }
namespace run { RealOptionKey const min_tolerance( "run:min_tolerance" );  }
namespace run { BooleanOptionKey const nblist_autoupdate( "run:nblist_autoupdate" );  }
namespace run { RealOptionKey const nblist_autoupdate_narrow( "run:nblist_autoupdate_narrow" );  }
namespace run { RealOptionKey const nblist_autoupdate_wide( "run:nblist_autoupdate_wide" );  }
namespace run { BooleanOptionKey const skip_set_reasonable_fold_tree( "run:skip_set_reasonable_fold_tree" );  }
namespace run { BooleanOptionKey const randomize_missing_coords( "run:randomize_missing_coords" );  }
namespace run { BooleanOptionKey const ignore_zero_occupancy( "run:ignore_zero_occupancy" );  }
namespace run { IntegerOptionKey const cycles_outer( "run:cycles_outer" );  }
namespace run { IntegerOptionKey const cycles_inner( "run:cycles_inner" );  }
namespace run { IntegerOptionKey const repack_rate( "run:repack_rate" );  }
namespace run { BooleanOptionKey const reinitialize_mover_for_each_job( "run:reinitialize_mover_for_each_job" );  }
namespace run { BooleanOptionKey const reinitialize_mover_for_new_input( "run:reinitialize_mover_for_new_input" );  }
namespace run { BooleanOptionKey const multiple_processes_writing_to_one_directory( "run:multiple_processes_writing_to_one_directory" );  }
namespace run { StringOptionKey const jobdist_miscfile_ext( "run:jobdist_miscfile_ext" );  }
namespace run { BooleanOptionKey const no_scorefile( "run:no_scorefile" );  }
namespace run { BooleanOptionKey const other_pose_to_scorefile( "run:other_pose_to_scorefile" );  }
namespace run { FileOptionKey const other_pose_scorefile( "run:other_pose_scorefile" );  }
namespace run { BooleanOptionKey const intermediate_scorefiles( "run:intermediate_scorefiles" );  }
namespace run { BooleanOptionKey const intermediate_structures( "run:intermediate_structures" );  }
namespace run { BooleanOptionKey const idealize_before_protocol( "run:idealize_before_protocol" );  }
namespace run { BooleanOptionKey const interactive( "run:interactive" );  }
namespace run { BooleanOptionKey const condor( "run:condor" );  }
namespace run { IntegerOptionKey const nproc( "run:nproc" );  }
namespace run { IntegerOptionKey const proc_id( "run:proc_id" );  }
namespace run { BooleanOptionKey const exit_if_missing_heavy_atoms( "run:exit_if_missing_heavy_atoms" );  }
namespace run { RealOptionKey const show_simulation_in_pymol( "run:show_simulation_in_pymol" );  }
namespace run { BooleanOptionKey const update_pymol_on_energy_changes_only( "run:update_pymol_on_energy_changes_only" );  }
namespace run { BooleanOptionKey const update_pymol_on_conformation_changes_only( "run:update_pymol_on_conformation_changes_only" );  }
namespace run { BooleanOptionKey const keep_pymol_simulation_history( "run:keep_pymol_simulation_history" );  }
namespace run { RealOptionKey const insert_disulfide_constraint_weight( "run:insert_disulfide_constraint_weight" );  }
namespace jd3 { BooleanOptionKey const jd3( "jd3" );  }
namespace jd3 { BooleanOptionKey const mpi_work_partition_job_distributor( "jd3:mpi_work_partition_job_distributor" );  }
namespace jd3 { FileOptionKey const job_definition_schema( "jd3:job_definition_schema" );  }
namespace jd3 { BooleanOptionKey const mpi_fast_nonblocking_output( "jd3:mpi_fast_nonblocking_output" );  }
namespace jd3 { IntegerOptionKey const n_archive_nodes( "jd3:n_archive_nodes" );  }
namespace jd3 { BooleanOptionKey const do_not_archive_on_node0( "jd3:do_not_archive_on_node0" );  }
namespace jd2 { BooleanOptionKey const jd2( "jd2" );  }
namespace jd2 { BooleanOptionKey const pose_input_stream( "jd2:pose_input_stream" );  }
namespace jd2 { BooleanOptionKey const lazy_silent_file_reader( "jd2:lazy_silent_file_reader" );  }
namespace jd2 { BooleanOptionKey const mpi_nowait_for_remaining_jobs( "jd2:mpi_nowait_for_remaining_jobs" );  }
namespace jd2 { RealOptionKey const mpi_timeout_factor( "jd2:mpi_timeout_factor" );  }
namespace jd2 { BooleanOptionKey const mpi_work_partition_job_distributor( "jd2:mpi_work_partition_job_distributor" );  }
namespace jd2 { BooleanOptionKey const mpi_file_buf_job_distributor( "jd2:mpi_file_buf_job_distributor" );  }
namespace jd2 { BooleanOptionKey const mpi_filebuf_jobdistributor( "jd2:mpi_filebuf_jobdistributor" );  }
namespace jd2 { BooleanOptionKey const mpi_fast_nonblocking_output( "jd2:mpi_fast_nonblocking_output" );  }
namespace jd2 { BooleanOptionKey const dd_parser( "jd2:dd_parser" );  }
namespace jd2 { IntegerOptionKey const ntrials( "jd2:ntrials" );  }
namespace jd2 { StringOptionKey const generic_job_name( "jd2:generic_job_name" );  }
namespace jd2 { BooleanOptionKey const no_output( "jd2:no_output" );  }
namespace jd2 { BooleanOptionKey const enzdes_out( "jd2:enzdes_out" );  }
namespace jd2 { IntegerOptionKey const buffer_silent_output( "jd2:buffer_silent_output" );  }
namespace jd2 { RealOptionKey const buffer_flush_frequency( "jd2:buffer_flush_frequency" );  }
namespace jd2 { BooleanOptionKey const delete_old_poses( "jd2:delete_old_poses" );  }
namespace jd2 { FileVectorOptionKey const resource_definition_files( "jd2:resource_definition_files" );  }
namespace jd2 { FileOptionKey const checkpoint_file( "jd2:checkpoint_file" );  }
namespace jd2 { BooleanOptionKey const failed_job_exception( "jd2:failed_job_exception" );  }
namespace jd2 { IntegerOptionKey const max_nstruct_in_memory( "jd2:max_nstruct_in_memory" );  }
namespace jd2 { BooleanOptionKey const sequential_mpi_job_distribution( "jd2:sequential_mpi_job_distribution" );  }
namespace jd2 { BooleanOptionKey const grid_ensemble( "jd2:grid_ensemble" );  }
namespace jd2 { BooleanOptionKey const seed_ensemble( "jd2:seed_ensemble" );  }
namespace jd2 { RealVectorOptionKey const seed_ensemble_weights( "jd2:seed_ensemble_weights" );  }
namespace jd2 { FileOptionKey const seed_ensemble_weights_file( "jd2:seed_ensemble_weights_file" );  }
namespace score { BooleanOptionKey const score_pose_cutpoint_variants( "score:score_pose_cutpoint_variants" );  }
namespace score { BooleanOptionKey const score( "score" );  }
namespace score { StringOptionKey const weights( "score:weights" );  }
namespace score { StringVectorOptionKey const set_weights( "score:set_weights" );  }
namespace score { StringOptionKey const pack_weights( "score:pack_weights" );  }
namespace score { StringOptionKey const soft_wts( "score:soft_wts" );  }
namespace score { BooleanOptionKey const docking_interface_score( "score:docking_interface_score" );  }
namespace score { RealOptionKey const min_score_score( "score:min_score_score" );  }
namespace score { StringOptionKey const custom_atom_pair( "score:custom_atom_pair" );  }
namespace score { FileVectorOptionKey const patch( "score:patch" );  }
namespace score { BooleanOptionKey const empty( "score:empty" );  }
namespace score { RealOptionKey const fa_max_dis( "score:fa_max_dis" );  }
namespace score { BooleanOptionKey const fa_Hatr( "score:fa_Hatr" );  }
namespace score { BooleanOptionKey const no_smooth_etables( "score:no_smooth_etables" );  }
namespace score { BooleanOptionKey const no_lk_polar_desolvation( "score:no_lk_polar_desolvation" );  }
namespace score { BooleanOptionKey const lk_polar_without_proline_N( "score:lk_polar_without_proline_N" );  }
namespace score { StringOptionKey const input_etables( "score:input_etables" );  }
namespace score { StringOptionKey const output_etables( "score:output_etables" );  }
namespace score { BooleanOptionKey const analytic_etable_evaluation( "score:analytic_etable_evaluation" );  }
namespace score { BooleanOptionKey const put_intra_into_total( "score:put_intra_into_total" );  }
namespace score { BooleanOptionKey const include_intra_res_protein( "score:include_intra_res_protein" );  }
namespace score { BooleanOptionKey const fa_stack_base_base_only( "score:fa_stack_base_base_only" );  }
namespace score { RealOptionKey const fa_stack_sol_prefactor( "score:fa_stack_sol_prefactor" );  }
namespace score { RealOptionKey const fa_stack_sol_stack_cutoff( "score:fa_stack_sol_stack_cutoff" );  }
namespace score { RealOptionKey const fa_stack_sol_dist_cutoff( "score:fa_stack_sol_dist_cutoff" );  }
namespace score { RealOptionKey const fa_stack_lr_prefactor( "score:fa_stack_lr_prefactor" );  }
namespace score { RealOptionKey const fa_stack_lr_stack_cutoff( "score:fa_stack_lr_stack_cutoff" );  }
namespace score { RealOptionKey const fa_stack_lr_dist_cutoff( "score:fa_stack_lr_dist_cutoff" );  }
namespace score { IntegerOptionKey const geom_sol_interres_path_distance_cutoff( "score:geom_sol_interres_path_distance_cutoff" );  }
namespace score { IntegerOptionKey const geom_sol_intrares_path_distance_cutoff( "score:geom_sol_intrares_path_distance_cutoff" );  }
namespace score { RealOptionKey const rms_target( "score:rms_target" );  }
namespace score { BooleanOptionKey const ramaneighbors( "score:ramaneighbors" );  }
namespace score { StringOptionKey const optH_weights( "score:optH_weights" );  }
namespace score { StringOptionKey const optH_patch( "score:optH_patch" );  }
namespace score { StringVectorOptionKey const hb_don_strength( "score:hb_don_strength" );  }
namespace score { StringVectorOptionKey const hb_acc_strength( "score:hb_acc_strength" );  }
namespace score { StringOptionKey const hbe_for_dH2O_aGEN_SP3SC_ssother( "score:hbe_for_dH2O_aGEN_SP3SC_ssother" );  }
namespace score { StringOptionKey const hbond_params( "score:hbond_params" );  }
namespace score { BooleanOptionKey const hbond_bb_per_residue_energy( "score:hbond_bb_per_residue_energy" );  }
namespace score { BooleanOptionKey const hbond_disable_bbsc_exclusion_rule( "score:hbond_disable_bbsc_exclusion_rule" );  }
namespace score { IntegerOptionKey const symE_units( "score:symE_units" );  }
namespace score { RealOptionKey const symE_bonus( "score:symE_bonus" );  }
namespace score { BooleanOptionKey const symmetric_gly_tables( "score:symmetric_gly_tables" );  }
namespace score { RealOptionKey const NV_lbound( "score:NV_lbound" );  }
namespace score { RealOptionKey const NV_ubound( "score:NV_ubound" );  }
namespace score { StringOptionKey const NV_table( "score:NV_table" );  }
namespace score { BooleanOptionKey const disable_orientation_dependent_rna_ch_o_bonds( "score:disable_orientation_dependent_rna_ch_o_bonds" );  }
namespace score { StringOptionKey const rna_torsion_potential( "score:rna_torsion_potential" );  }
namespace score { StringOptionKey const rna_suite_potential( "score:rna_suite_potential" );  }
namespace score { StringOptionKey const suiteness_bonus( "score:suiteness_bonus" );  }
namespace score { BooleanOptionKey const rna_torsion_skip_chainbreak( "score:rna_torsion_skip_chainbreak" );  }
namespace score { BooleanOptionKey const rna_chemical_shift_verbose( "score:rna_chemical_shift_verbose" );  }
namespace score { BooleanOptionKey const rna_chemical_shift_larmord( "score:rna_chemical_shift_larmord" );  }
namespace score { StringOptionKey const rna_chemical_shift_exp_data( "score:rna_chemical_shift_exp_data" );  }
namespace score { StringOptionKey const rna_chemical_shift_larmord_par( "score:rna_chemical_shift_larmord_par" );  }
namespace score { StringOptionKey const rna_chemical_shift_larmord_wt( "score:rna_chemical_shift_larmord_wt" );  }
namespace score { StringOptionKey const rna_chemical_shift_larmord_ref( "score:rna_chemical_shift_larmord_ref" );  }
namespace score { StringOptionKey const rna_chemical_shift_larmord_nei( "score:rna_chemical_shift_larmord_nei" );  }
namespace score { RealOptionKey const rna_chemical_shift_larmord_cut( "score:rna_chemical_shift_larmord_cut" );  }
namespace score { RealOptionKey const rna_chemical_shift_larmord_beta( "score:rna_chemical_shift_larmord_beta" );  }
namespace score { StringOptionKey const rna_chemical_shift_H5_prime_mode( "score:rna_chemical_shift_H5_prime_mode" );  }
namespace score { IntegerVectorOptionKey const rna_chemical_shift_include_res( "score:rna_chemical_shift_include_res" );  }
namespace score { BooleanOptionKey const DMS_separate_features( "score:DMS_separate_features" );  }
namespace score { BooleanOptionKey const DMS_careful_base_pair_classifier( "score:DMS_careful_base_pair_classifier" );  }
namespace score { RealOptionKey const rna_chem_map_lores_weight( "score:rna_chem_map_lores_weight" );  }
namespace score { BooleanOptionKey const use_2prime_OH_potential( "score:use_2prime_OH_potential" );  }
namespace score { BooleanOptionKey const include_neighbor_base_stacks( "score:include_neighbor_base_stacks" );  }
namespace score { BooleanOptionKey const FA_low_res_rnp_scoring( "score:FA_low_res_rnp_scoring" );  }
namespace score { BooleanOptionKey const find_neighbors_3dgrid( "score:find_neighbors_3dgrid" );  }
namespace score { BooleanOptionKey const find_neighbors_stripehash( "score:find_neighbors_stripehash" );  }
namespace score { StringOptionKey const seqdep_refene_fname( "score:seqdep_refene_fname" );  }
namespace score { StringOptionKey const secondary_seqdep_refene_fname( "score:secondary_seqdep_refene_fname" );  }
namespace score { BooleanOptionKey const exact_occ_pairwise( "score:exact_occ_pairwise" );  }
namespace score { BooleanOptionKey const exact_occ_skip_Hbonders( "score:exact_occ_skip_Hbonders" );  }
namespace score { BooleanOptionKey const exact_occ_pairwise_by_res( "score:exact_occ_pairwise_by_res" );  }
namespace score { BooleanOptionKey const exact_occ_split_between_res( "score:exact_occ_split_between_res" );  }
namespace score { BooleanOptionKey const exact_occ_self_res_no_occ( "score:exact_occ_self_res_no_occ" );  }
namespace score { RealOptionKey const exact_occ_radius_scaling( "score:exact_occ_radius_scaling" );  }
namespace score { StringVectorOptionKey const ref_offsets( "score:ref_offsets" );  }
namespace score { RealOptionKey const ref_offset( "score:ref_offset" );  }
namespace score { BooleanOptionKey const output_residue_energies( "score:output_residue_energies" );  }
namespace score { StringOptionKey const fa_custom_pair_distance_file( "score:fa_custom_pair_distance_file" );  }
namespace score { RealOptionKey const disulf_matching_probe( "score:disulf_matching_probe" );  }
namespace score { RealVectorOptionKey const bonded_params( "score:bonded_params" );  }
namespace score { StringOptionKey const bonded_params_dir( "score:bonded_params_dir" );  }
namespace score { StringOptionKey const extra_improper_file( "score:extra_improper_file" );  }
namespace score { RealOptionKey const pro_close_planar_constraint( "score:pro_close_planar_constraint" );  }
namespace score { BooleanOptionKey const no_pro_close_ring_closure( "score:no_pro_close_ring_closure" );  }
namespace score { RealOptionKey const ring_close_shadow_constraint( "score:ring_close_shadow_constraint" );  }
namespace score { BooleanOptionKey const linear_bonded_potential( "score:linear_bonded_potential" );  }
namespace score { RealOptionKey const free_suite_bonus( "score:free_suite_bonus" );  }
namespace score { RealOptionKey const free_sugar_bonus( "score:free_sugar_bonus" );  }
namespace score { RealOptionKey const free_2HOprime_bonus( "score:free_2HOprime_bonus" );  }
namespace score { RealOptionKey const syn_G_potential_bonus( "score:syn_G_potential_bonus" );  }
namespace score { RealOptionKey const pack_phosphate_penalty( "score:pack_phosphate_penalty" );  }
namespace score { RealOptionKey const free_side_chain_bonus( "score:free_side_chain_bonus" );  }
namespace score { RealOptionKey const bond_angle_sd_polar_hydrogen( "score:bond_angle_sd_polar_hydrogen" );  }
namespace score { RealOptionKey const bond_torsion_sd_polar_hydrogen( "score:bond_torsion_sd_polar_hydrogen" );  }
namespace score { BooleanOptionKey const rna_bulge_bonus_once_per_loop( "score:rna_bulge_bonus_once_per_loop" );  }
namespace score { BooleanOptionKey const compute_mg_sol_for_hydrogens( "score:compute_mg_sol_for_hydrogens" );  }
namespace score { IntegerVectorOptionKey const rg_local_span( "score:rg_local_span" );  }
namespace score { BooleanOptionKey const unmodifypot( "score:unmodifypot" );  }
namespace score { RealOptionKey const conc( "score:conc" );  }
namespace score { IntegerVectorOptionKey const sidechain_buried( "score:sidechain_buried" );  }
namespace score { IntegerVectorOptionKey const sidechain_exposed( "score:sidechain_exposed" );  }
namespace score { StringVectorOptionKey const aa_composition_setup_file( "score:aa_composition_setup_file" );  }
namespace score { StringOptionKey const aa_repeat_energy_penalty_file( "score:aa_repeat_energy_penalty_file" );  }
namespace score { RealOptionKey const aspartimide_penalty_value( "score:aspartimide_penalty_value" );  }
namespace score { RealOptionKey const elec_min_dis( "score:elec_min_dis" );  }
namespace score { RealOptionKey const elec_max_dis( "score:elec_max_dis" );  }
namespace score { RealOptionKey const elec_die( "score:elec_die" );  }
namespace score { BooleanOptionKey const elec_r_option( "score:elec_r_option" );  }
namespace score { BooleanOptionKey const elec_sigmoidal_die( "score:elec_sigmoidal_die" );  }
namespace score { RealOptionKey const elec_sigmoidal_die_D( "score:elec_sigmoidal_die_D" );  }
namespace score { RealOptionKey const elec_sigmoidal_die_D0( "score:elec_sigmoidal_die_D0" );  }
namespace score { RealOptionKey const elec_sigmoidal_die_S( "score:elec_sigmoidal_die_S" );  }
namespace score { BooleanOptionKey const elec_representative_cp( "score:elec_representative_cp" );  }
namespace score { BooleanOptionKey const elec_representative_cp_flip( "score:elec_representative_cp_flip" );  }
namespace score { BooleanOptionKey const eval_intrares_elec_ST_only( "score:eval_intrares_elec_ST_only" );  }
namespace score { BooleanOptionKey const smooth_fa_elec( "score:smooth_fa_elec" );  }
namespace score { StringOptionKey const grpelec_fade_type( "score:grpelec_fade_type" );  }
namespace score { RealOptionKey const grpelec_fade_param1( "score:grpelec_fade_param1" );  }
namespace score { RealOptionKey const grpelec_fade_param2( "score:grpelec_fade_param2" );  }
namespace score { StringOptionKey const elec_group_file( "score:elec_group_file" );  }
namespace score { StringOptionKey const elec_group_extrafile( "score:elec_group_extrafile" );  }
