#
# Example Binder Config file
#
# Each line represend directive to bind or skip object with format:
# [+|-][namespace|function|class] <name>
#
# line started with '#' is ignored (ie comments)
#

#+include <pybind11/aaa/stl.h>
#+include <pybind11/bbb/stl.h>
#+include <std_binders.hpp>

#+binder std::vector binder::vector_binder

#-class std::__bit_const_reference
#-class std::__1::__bit_const_reference
-class std::__bit_reference
#-class std::__1::__bit_reference

+class Global


#+namespace utility
#-namespace aa


-function utility::foo_skip
-class utility::FArrayInitializer

-function utility::A::foo_a_2
-function utility::B::foo_b_2

#-function std::map::insert
#-function std::vector::data
#-function std::vector::resize
#-class std::_Rb_tree_iterator

+default_static_pointer_return_value_policy           pybind11::return_value_policy::reference
+default_static_lvalue_reference_return_value_policy  pybind11::return_value_policy::reference
+default_static_rvalue_reference_return_value_policy  pybind11::return_value_policy::move

+default_member_pointer_return_value_policy           pybind11::return_value_policy::reference
+default_member_lvalue_reference_return_value_policy  pybind11::return_value_policy::reference_internal
+default_member_rvalue_reference_return_value_policy  pybind11::return_value_policy::move
