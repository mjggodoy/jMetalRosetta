// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington CoMotion, email: license@uw.edu.

/// @file protocols/cyclic_peptide_predict/SimpleCycpepPredictApplication_MPI_JobResultsSummary.cc
/// @brief A small helper class used by the SimpleCycpepPredict_MPI class.
/// @author Vikram K. Mulligan, Baker laboratory (vmullig@uw.edu)

// Unit Headers
#include <protocols/cyclic_peptide_predict/SimpleCycpepPredictApplication_MPI_JobResultsSummary.hh>

// Package Headers
#include <basic/options/option.hh>
#include <core/types.hh>

// option key includes
#include <basic/options/option_macros.hh>
#include <basic/options/keys/run.OptionKeys.gen.hh>
#include <basic/options/keys/in.OptionKeys.gen.hh>
#include <basic/options/keys/out.OptionKeys.gen.hh>
#include <basic/options/keys/cyclic_peptide.OptionKeys.gen.hh>

//numeric headers

// Utility headers
#include <basic/Tracer.hh>

// C++ headers
#include <cstdio>

static THREAD_LOCAL basic::Tracer TR( "protocols.cyclic_peptide_predict.SimpleCycpepPredictApplication_MPI_JobResultsSummary" );

namespace protocols {
namespace cyclic_peptide_predict {


/// @brief Constructor
///
SimpleCycpepPredictApplication_MPI_JobResultsSummary::SimpleCycpepPredictApplication_MPI_JobResultsSummary() :
	originating_node_MPI_rank_( 0 ),
	jobindex_on_originating_node_( 0 ),
	pose_energy_( 0 ),
	rmsd_(0),
	hbonds_(0),
	cis_peptide_bonds_(0),
	mpi_ranks_handling_message_()
{}

/// @brief Constructor with options
///
SimpleCycpepPredictApplication_MPI_JobResultsSummary::SimpleCycpepPredictApplication_MPI_JobResultsSummary(
	int const originating_node_MPI_rank,
	core::Size const jobindex_on_originating_node,
	core::Real const &pose_energy,
	core::Real const &rmsd,
	core::Size const hbonds,
	core::Size const cis_peptide_bonds
) :
	originating_node_MPI_rank_( originating_node_MPI_rank ),
	jobindex_on_originating_node_( jobindex_on_originating_node ),
	pose_energy_( pose_energy ),
	rmsd_(rmsd),
	hbonds_(hbonds),
	cis_peptide_bonds_(cis_peptide_bonds),
	mpi_ranks_handling_message_()
{}

/// @brief Explicit virtual destructor.
///
SimpleCycpepPredictApplication_MPI_JobResultsSummary::~SimpleCycpepPredictApplication_MPI_JobResultsSummary() = default;

/// @brief Print a summary of this object to a stream.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::show(
	std::ostream & out
) const {
	out << "MPI rank: " << originating_node_MPI_rank_ << "\tJob index: " << jobindex_on_originating_node_ << "\tEnergy: " << pose_energy_ << "\tRMSD: " << rmsd_ << "\tHbonds: " << hbonds_ << "\tCisPepBonds: " << cis_peptide_bonds_ << "\tHandled_by: ";
	for ( core::Size i=1, imax=mpi_ranks_handling_message_.size(); i<=imax; ++i ) {
		out << mpi_ranks_handling_message_[i];
		if ( i<imax ) out << ",";
	}
	out << ".\n" << std::endl;
}


/// @brief Set the MPI rank of the process that initially carried out this job.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::set_originating_node_MPI_rank(
	int const rank
) {
	originating_node_MPI_rank_ = rank;
}

/// @brief Set the local index of the job on the node on which it was carried out.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::set_jobindex_on_originating_node(
	core::Size const index
) {
	jobindex_on_originating_node_ = index;
}

/// @brief Set the energy of the pose generated by this job.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::set_pose_energy(
	core::Real const &val
) {
	pose_energy_ = val;
}

/// @brief Set the RMSD of the pose generated by this job to native.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::set_rmsd(
	core::Real const &val
) {
	rmsd_ = val;
}

/// @brief Set the number of hbonds of the pose generated by this job.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::set_hbonds(
	core::Size const val
) {
	hbonds_ = val;
}

/// @brief Set the number of cis-peptide bonds of the pose generated by this job.
///
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::set_cis_peptide_bonds(
	core::Size const val
) {
	cis_peptide_bonds_ = val;
}

/// @brief Add a proc that handled this message to the list of procs that transmitted this JobResultsSummary.
/// @details Whenever a proc sends it to someone else, the receiving proc appends the sender's rank here.  This allows the emperor
/// node to address an output request to the correct proc.
void
SimpleCycpepPredictApplication_MPI_JobResultsSummary::add_MPI_rank_handling_message(
	int const new_proc
) {
	mpi_ranks_handling_message_.push_back( new_proc );
}


} //cyclic_peptide_predict
} //protocols

