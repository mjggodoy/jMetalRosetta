// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington CoMotion, email: license@uw.edu.

/// @file   src/protocols/init/init.GridRegistrators.ihh
/// @brief  Declare WidgetRegistrators as static (global) variables in this .cc file
///         so that at load time, they will be initialized, and the Creator classes
///         they register will be handed to the appropriate WidgetFactory.
///         This is for GridRegistrators ONLY.
/// @author Steven Lewis smlewi@gmail.com

namespace protocols {

using namespace qsar::scoring_grid;
static GridRegistrator<AtrGridCreator> reg_AtrGridCreator;
static GridRegistrator<RepGridCreator> reg_RepGridCreator;
static GridRegistrator<ClassicGridCreator> reg_ClassicGridCreator;
static GridRegistrator<HbaGridCreator> reg_HbaGridCreator;
static GridRegistrator<HbdGridCreator> reg_HbdGridCreator;
static GridRegistrator<VdwGridCreator> reg_VdwGridCreator;
static GridRegistrator<ChargeGridCreator> reg_ChargeGridCreator;
static GridRegistrator<ShapeGridCreator> reg_ShapeGridCreator;
static GridRegistrator<SolvationGridCreator> reg_SolvationGridCreator;
static GridRegistrator<SolvationMetaGridCreator> reg_SolvationMetaGridCreator;
static GridRegistrator<LigandPropertyScoreCreator> reg_LigandPropertyScoreCreator;

} //namespace protocols
