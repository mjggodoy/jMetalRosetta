// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington CoMotion, email: license@uw.edu.

/// @file   src/protocols/init/init.ConstraintRegistrators.ihh
/// @brief  Declare WidgetRegistrators as static (global) variables in this .cc file
///         so that at load time, they will be initialized, and the Creator classes
///         they register will be handed to the appropriate WidgetFactory.
///         This is for ConstraintRegistrators ONLY.
/// @author Steven Lewis smlewi@gmail.com

namespace protocols {

using core::scoring::constraints::ConstraintRegistrator;

//from protocols/constraints_additional/AdditionalConstraintCreators.hh
static ConstraintRegistrator< protocols::constraints_additional::BindingSiteConstraintCreator > BindingSiteConstraintCreator_registrator;
static ConstraintRegistrator< protocols::constraints_additional::SequenceCoupling1BDConstraintCreator > SequenceCoupling1BDConstraintCreator_registrator;
static ConstraintRegistrator< protocols::constraints_additional::SequenceCouplingConstraintCreator > SequenceCouplingConstraintCreator_registrator;
//This ConstraintRegistrator cannot exist because someone has really silly code that modifies the ConstraintFactory midstream and this breaks it.
//static ConstraintRegistrator< protocols::constraints_additional::NamedAtomPairConstraintCreator > NamedAtomPairConstraintCreator_registrator;

static ConstraintRegistrator< protocols::pockets::PocketConstraintCreator > PocketConstraintCreator_registrator;

} //namespace protocols
