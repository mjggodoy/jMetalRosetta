// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington CoMotion, email: license@uw.edu.

/// @file protocols/sewing/conformation/AssemblyFactory.hh
///
/// @brief A super-simple factory for generating Assembly classes
///
/// @author Tim Jacobs

#ifndef INCLUDED_protocols_sewing_conformation_AssemblyFactory_hh
#define INCLUDED_protocols_sewing_conformation_AssemblyFactory_hh

//Package headers
#include <protocols/sewing/conformation/Assembly.fwd.hh>
#include <protocols/sewing/sampling/SewGraph.fwd.hh>
#include <protocols/sewing/conformation/Model.hh>

namespace protocols {
namespace sewing  {

///@brief An Assembly is a collection of SewSegments. Assemblies are created using the
///geometric "compatibility" data generated by the Hasher.
class AssemblyFactory {

public:

	static
	AssemblyOP
	create_assembly(
		std::string assembly_name
	);

};

} //sewing namespace
} //protocols namespace

#endif

