// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington CoMotion, email: license@uw.edu.

/// @file   protocols/denovo_design/residue_selectors/NamedSegmentSelector.hh
/// @brief  Selects residues from a named segment generated by StructureArchitects
/// @author Tom Linsky (tlinsky@uw.edu)

#ifndef INCLUDED_protocols_denovo_design_residue_selectors_NamedSegmentSelector_HH
#define INCLUDED_protocols_denovo_design_residue_selectors_NamedSegmentSelector_HH

// Unit headers
#include <protocols/denovo_design/residue_selectors/NamedSegmentSelector.fwd.hh>

// Protocol headers
#include <protocols/denovo_design/components/Segment.fwd.hh>
#include <protocols/denovo_design/components/StructureData.fwd.hh>
#include <protocols/denovo_design/types.hh>

// Core headers
#include <core/types.hh>
#include <core/select/residue_selector/ResidueRanges.hh>
#include <core/select/residue_selector/ResidueSelector.hh>
#include <core/pose/Pose.fwd.hh>

// Utility Headers
#include <utility/tag/Tag.fwd.hh>
#include <utility/tag/XMLSchemaGeneration.fwd.hh>
#include <utility/vector1.hh>

// C++ headers
#include <set>

namespace protocols {
namespace denovo_design {
namespace residue_selectors {

/// @brief Selects residues from a named segment generated by StructureArchitects
class NamedSegmentSelector : public core::select::residue_selector::ResidueSelector {
public:
	typedef components::SegmentResid SignedResid;
	typedef std::set< SignedResid > SignedResidSet;
	typedef core::select::residue_selector::ResidueRanges ResidueRanges;
	typedef core::select::residue_selector::ResidueSubset ResidueSubset;
	typedef core::select::residue_selector::ResidueSelectorOP ResidueSelectorOP;

public:

	/// @brief Constructor.
	NamedSegmentSelector();

	NamedSegmentSelector( SegmentName const & segment_name, std::string const & residues_str );

	/// @brief Destructor.
	virtual ~NamedSegmentSelector();

	/// @brief Clone operator.
	/// @details Copy the current object (creating the copy on the heap) and return an owning pointer
	/// to the copy.  All ResidueSelectors must implement this.
	virtual ResidueSelectorOP
	clone() const;

	/// @brief "Apply" function.
	/// @details Given the pose, generate a vector of bools with entries for every residue in the pose
	/// indicating whether each residue is selected ("true") or not ("false").
	virtual ResidueSubset
	apply( core::pose::Pose const & pose ) const;

	/// @brief XML parse.
	/// @details Parse RosettaScripts tags and set up this mover.
	virtual void
	parse_my_tag(
		utility::tag::TagCOP tag,
		basic::datacache::DataMap & datamap
	);

	/// @brief Get the mover class name.
	virtual std::string
	get_name() const;

	/// @brief Get the mover class name.
	static std::string
	class_name();

	/// @brief Provide XSD information, enabling mechanical validation of input XML.
	static void
	provide_xml_schema( utility::tag::XMLSchemaDefinition & xsd );

public:
	void
	set_segment( SegmentName const & segment_name );

	void
	set_residues( std::string const & residues_str );

private:
	SignedResidSet
	resid_set() const;

	/// @brief Computes residue subset from a Segment and list of resids
	/// @param[out] subset ResidueSubset to be modified
	/// @param[in]  sd     StructureData object
	/// @param[in]  resids List of signed residue numbers, can be empty if
	///                    the entire segment is being selected
	void
	compute_residue_subset_for_segment(
		ResidueSubset & subset,
		components::Segment const & seg,
		SignedResidSet const & resids ) const;

	/// @brief Computes residue subset from a StructureData and list of resids
	/// @param[in]  sd     StructureData object
	/// @param[in]  resids List of signed residue number, can be empty if no
	///                    residue numbers are specified
	ResidueSubset
	compute_residue_subset(
		components::StructureData const & sd,
		SignedResidSet const & resids ) const;

private:
	SegmentName segment_;
	std::string residues_;
	bool error_on_missing_segment_;

};

} //protocols
} //denovo_design
} //residue_selectors

#endif //INCLUDEDprotocols/denovo_design/residue_selectors_NamedSegmentSelector_hh
